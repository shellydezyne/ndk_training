apply plugin: 'com.android.model.application'

def openssl_path = file(project(':openssl').projectDir).absolutePath

model {

    repositories {
        libs(PrebuiltLibraries){
            openssl{
                headers.srcDir "${openssl_path}/include"
                binaries.withType(StaticLibraryBinary){
                    staticLibraryFile = file("${openssl_path}/lib/${targetPlatform.getName()}/libcrypto.a")
                }
            }
        }
    }
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            applicationId = "com.example.dheerajkaushik.ndktest"
            minSdkVersion.apiLevel = 21
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "1.0"
            buildConfigFields.with {
                create() {
                    type = "int"
                    name = "VALUE"
                    value = "1"
                }
            }
        }

    }
    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.pro'))
            ndk.with {
                debuggable = true
            }
        }
    }


    /*
     * native build settings
     */
    android.ndk {
        moduleName = "HelloJNI"
        platformVersion = 9 //same as minSdkVersion.apiLevel for better compatibility
        abiFilters.addAll(["armeabi", "armeabi-v7a"]) //filtering ABIs on the ones Google Play Games library is compatible with.

        /*
         * Other ndk flags configurable here are
         * cppFlags.add("-fno-rtti")
         * cppFlags.add("-fno-exceptions")
         * ldLibs.addAll(["android", "log"])
         * stl       = "system"
        toolchain = "clang"
        toolchainVersion = "3.5"
        // Note that CFlags has a capital C, which is inconsistent with
        // the naming convention of other properties.  This is a
        // technical limitation that will be resolved
        CFlags.add("-DCUSTOM_DEFINE")
        cppFlags.add("-DCUSTOM_DEFINE")
        ldFlags.add("-L/custom/lib/path")
        ldLibs.add("log")
        stl = "stlport_static"
         */
    }
    android.sources {
        main{
            jni {

                dependencies {
                    library "openssl" linkage "static"
                }
            }
        }
    }

    android.productFlavors {
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa
        create("arm") {
            ndk.abiFilters.add("armeabi")
        }
        create("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
        }
        /*create("arm8") {
            ndk.abiFilters.add("arm64-v8a")
        }
        create("x86") {
            ndk.abiFilters.add("x86")
        }
        create("x86-64") {
            ndk.abiFilters.add("x86_64")
        }
        create("mips") {
            ndk.abiFilters.add("mips")
        }
        create("mips-64") {
            ndk.abiFilters.add("mips64")
        }
        // To include all cpu architectures, leaves abiFilters empty
        create("all")*/
    }

}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
}
